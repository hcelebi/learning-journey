apiVersion: v1
kind: Service
metadata:
  name: accounting-aggregation
  labels:
    app: accounting-aggregation
spec:
  ports:
  - name: '8080'
    port: 8080
    targetPort: 8080
  selector:
    app: accounting-aggregation
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: accounting-aggregation
  labels:
    app: accounting-aggregation
spec:
  selector:
    matchLabels:
      app: accounting-aggregation
  replicas: __REPLICAS__
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: accounting-aggregation
    spec:
      containers:
      - name: accounting-aggregation
        image: harbor-test.app.gittigidiyor.net/gg/papi-accounting-aggregation:__VERSION__
        ports:
        - containerPort: 8080
        env:
        - name: DEPLOY_TYPE
          value: __DEPLOY_TYPE__
        - name: XMS
          value: 256M
        - name: XMX
          value: 256M
        - name: DEPLOY_ENV
          value: KUBERNETES
        - name: PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        readinessProbe:
          httpGet:
            path: /accounting-aggregation/_hc
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 30
        resources:
          limits:
            memory: 1152Mi
        volumeMounts:
        - mountPath: /var/log/java
          name: accounting-aggregation-claim0
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
      - name: accounting-aggregation-claim0
        emptyDir: {}
